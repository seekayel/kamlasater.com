name: Update GH Stats Image

on:
  schedule:
    - cron: "47 23 * * *"   # nightly
  workflow_dispatch:

permissions:
  contents: write

jobs:
  render-stats:
    runs-on: ubuntu-latest

    env:
      # Who to render stats for (defaults to repo owner)
      GH_STATS_USERNAME: ${{ github.repository_owner }}
      GH_STATS_PORT: "9000"

    steps:
      - name: Check if we should run
        id: should-run
        run: echo "result=$(($RANDOM % 3))" >> $GITHUB_OUTPUT

      - name: Checkout site repo (kamlasater.com)
        if: steps.should-run.outputs.result == 0
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout stats repo (anuraghazra/github-readme-stats)
        if: steps.should-run.outputs.result == 0
        uses: actions/checkout@v4
        with:
          repository: anuraghazra/github-readme-stats
          path: github-readme-stats
          fetch-depth: 0

      - name: Setup Node
        if: steps.should-run.outputs.result == 0
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set current date
        if: steps.should-run.outputs.result == 0
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Install deps for stats server
        if: steps.should-run.outputs.result == 0
        working-directory: github-readme-stats
        run: |
          npm ci
          # ensure these tiny runtime deps exist locally for the server flow
          npm i --no-save express wait-on

      - name: Start local stats server
        if: steps.should-run.outputs.result == 0
        working-directory: github-readme-stats
        env:
          PAT_1: ${{ secrets.GH_STATS_PAT }}   # classic PAT with repo, read:org, user; SSO-authorized if needed
          PORT: ${{ env.GH_STATS_PORT }}
        run: |
          node express.js &
          npx wait-on "http://127.0.0.1:${PORT}/"

      - name: Render SVG into site repo
        if: steps.should-run.outputs.result == 0
        run: |
          mkdir -p images
          curl -sSL \
            "http://127.0.0.1:${GH_STATS_PORT}/?username=${GH_STATS_USERNAME}&count_private=true&include_all_commits=false&show_icons=true&disable_animations=true&rank_icon=github&custom_title=Kam%20Lasater%20GitHub%20Activity%20v${{ steps.date.outputs.date }}" \
            -o static/img/gh-stats-social-card.svg
          test -s static/img/gh-stats-social-card.svg || (echo "Failed to produce SVG" && exit 1)

      - name: Convert SVG to PNG with aspect-ratio preservation
        if: steps.should-run.outputs.result == 0
        run: |
          # Install dependencies for SVG-to-PNG conversion
          npm ci
          # Convert to PNG using aspect-preserving script with white background
          node bin/svg-to-png-aspect.js static/img/gh-stats-social-card.svg static/img/gh-stats-social-card.png 1200 630 "#ffffff"

      - name: Commit & push if changed
        if: steps.should-run.outputs.result == 0
        id: commit
        run: |
          git config user.name  "Kam Lasater [gh-stats-bot]"
          git config user.email "ckl+gh-stats-bot@seekayel.com"
          
          # Check current status
          echo "=== Git status before staging ==="
          git status
          
          # Stage only the specific files we want to commit
          git add static/img/gh-stats-social-card.svg static/img/gh-stats-social-card.png
          
          # Check what's staged
          echo "=== Git status after staging ==="
          git status
          
          # Check if there are actually changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit - files are identical"
          else
            echo "Changes detected, committing..."
            git commit -m "chore: update GH stats image"
            echo "=== Git status after commit ==="
            git status
            git push
          fi
